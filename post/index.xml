<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Fucking Life</title>
    <link>https://fuCking-Life.github.io/post/</link>
    <description>Recent content in Posts on Fucking Life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 26 Apr 2021 14:12:01 +0800</lastBuildDate><atom:link href="https://fuCking-Life.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一些有用的网址合集</title>
      <link>https://fuCking-Life.github.io/post/some_webs/</link>
      <pubDate>Mon, 26 Apr 2021 14:12:01 +0800</pubDate>
      
      <guid>https://fuCking-Life.github.io/post/some_webs/</guid>
      <description> GCK&amp;rsquo;S FILE SIGNATURES TABLE 想查询某个资源是什么类型的往往需要文件头的几个字节来判断。这里就是类型和头字节的对照表。
 </description>
    </item>
    
    <item>
      <title>iOS底层历险记-目录</title>
      <link>https://fuCking-Life.github.io/post/objc_essence_0/</link>
      <pubDate>Fri, 23 Apr 2021 21:55:05 +0800</pubDate>
      
      <guid>https://fuCking-Life.github.io/post/objc_essence_0/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;现在的iOS开发已经进入到了后iOS开发时代，不再是那个会点网络请求、会拖个界面、会写个自定义控件就可以找个不错的工作的年代了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Objective-C 一、对象本质——对象的分类</title>
      <link>https://fuCking-Life.github.io/post/objc_essence_1/</link>
      <pubDate>Tue, 13 Apr 2021 22:07:09 +0800</pubDate>
      
      <guid>https://fuCking-Life.github.io/post/objc_essence_1/</guid>
      <description>整个OC对象的分类可以分为以下三种：
   实例对象 instance    类对象 class    元类对象 meta-class    接下来呢，我要一一开始讨论三类对象，每个对象，都会从内存布局、源码分析等角度切入，然后扩展，说到哪儿算哪儿。</description>
    </item>
    
    <item>
      <title>Hugo的使用和主题的修改</title>
      <link>https://fuCking-Life.github.io/post/inithugo/</link>
      <pubDate>Sat, 10 Apr 2021 22:07:20 +0800</pubDate>
      
      <guid>https://fuCking-Life.github.io/post/inithugo/</guid>
      <description>本人电脑是mac，所以仅仅按照mac的安装步骤阐述。
1. 安装git 和 brew 应该都要的，没有的请自行百度。
2. 安装Hugo    brew install hugo // 下载hugo    hugo new site blog //初始化站点，一般是在Users/目录下    https://themes.</description>
    </item>
    
    <item>
      <title>iOS内存缓存的方案比较</title>
      <link>https://fuCking-Life.github.io/post/memory_cache/</link>
      <pubDate>Tue, 11 Dec 2018 17:34:38 +0800</pubDate>
      
      <guid>https://fuCking-Life.github.io/post/memory_cache/</guid>
      <description>主要关注这三个框架的内存缓存。以及LRU算法的实现。
一：TMMemoryCache 1.1 TMMemoryCache简介 TMCache相比较于NSCache，新增了memoryCache的缓存大小，缓存时长的控制，进入后台和收到内存警告时的处理。 TMCache的内存缓存实现是用三个字典来实现的。第一个是存储缓存对象，第二个字典是用来存储缓存时效，第三个使用来存储缓存大小。 TMCache的内存缓存分为同步缓存和异步缓存。 全局维护了一个 concurrent queue ，所有的读写操作都放在这里面。运用了 dispatch_barrier_async来保证任务的顺序执行。在同步读写的方法中，运用信号量来保证线程的同步。</description>
    </item>
    
    <item>
      <title>weex(三)weex &amp; Native交互</title>
      <link>https://fuCking-Life.github.io/post/weex/weex3/</link>
      <pubDate>Tue, 05 Jun 2018 09:19:59 +0800</pubDate>
      
      <guid>https://fuCking-Life.github.io/post/weex/weex3/</guid>
      <description>一：写在前面 在深入使用weex的过程中，发现了不少问题。等以后再和大家分享，今天聊一下weex和native的交互。 weex和native的交互可以大致分为三类，每一类都给大家举个🌰。 具体分类如下。
1. js调用native
2. native调用js
3. js调用native处理完成后回调js</description>
    </item>
    
    <item>
      <title>weex(二)weex实时更新实现</title>
      <link>https://fuCking-Life.github.io/post/weex/weex2/</link>
      <pubDate>Mon, 21 May 2018 17:56:59 +0800</pubDate>
      
      <guid>https://fuCking-Life.github.io/post/weex/weex2/</guid>
      <description>一：写在前面 用过RN的都知道，RN有HotReload技术。而且修改一下RCTSocket.m（具体什么文件忘记了）文件中的localhost地址即可实现。但是Weex官方文档中并没有提及Weex 热加载的技术。是不是并不能实现呢？答案是否定的。在我翻阅了很多过时的陈旧的资料，以及Weexdemo后发现，weex也是可以实现热加载的。不知道是不是叫做hot reload，还是说只有RN的才是hot reload。我们暂时叫做实时更新吧。严谨一些。
二：什么是Hot reload？以及实现原理 这里借鉴React Native 热加载（Hot Reload）原理简介 ，不知道weex的实时更新是否使用的和RN同样的技术。 warning:这一点埋个坑，以后来补。</description>
    </item>
    
    <item>
      <title>weex(一)环境搭建&#43;iOS现有项目集成</title>
      <link>https://fuCking-Life.github.io/post/weex/weex1/</link>
      <pubDate>Thu, 17 May 2018 11:43:59 +0800</pubDate>
      
      <guid>https://fuCking-Life.github.io/post/weex/weex1/</guid>
      <description>一. 环境搭建 以下搭建过程来源WEEX官网。做了简单的提炼和总结。以及一些坑点。
如果只想去试试看的话，这里有个在线的编辑器可以使用，可以用这个尝试一下。
1.1 安装homebrew + Node.js 这一部分可移步First：React native搭建记录。安装和配置是完全一样的。</description>
    </item>
    
  </channel>
</rss>
